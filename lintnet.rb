# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Lintnet < Formula
  desc "Secure, Powerful, Reusable Configuration file linter powered by Jsonnet
"
  homepage "https://github.com/lintnet/lintnet"
  version "0.4.10"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/lintnet/lintnet/releases/download/v0.4.10/lintnet_darwin_amd64.tar.gz"
      sha256 "244b5b87c0e8724d2258f38dc266a8b25a429d0ef1d04ce2cb5ab17bf61595d1"

      def install
        bin.install "lintnet"
        generate_completions_from_executable(bin/"lintnet", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/lintnet/lintnet/releases/download/v0.4.10/lintnet_darwin_arm64.tar.gz"
      sha256 "9d5f93082ef5dd5b17180be18f52be680948cd5c2d24c3a82040a6159b105785"

      def install
        bin.install "lintnet"
        generate_completions_from_executable(bin/"lintnet", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/lintnet/lintnet/releases/download/v0.4.10/lintnet_linux_amd64.tar.gz"
      sha256 "5ebd37572d6f301d0c468a7e645e93f4b4a8dc49e837e9a87f4647046b9de0d0"
      def install
        bin.install "lintnet"
        generate_completions_from_executable(bin/"lintnet", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/lintnet/lintnet/releases/download/v0.4.10/lintnet_linux_arm64.tar.gz"
      sha256 "3b69a419d340739810669ae58a102c3bb0c5761aba5a5d8a7914d31a5e169ed7"
      def install
        bin.install "lintnet"
        generate_completions_from_executable(bin/"lintnet", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  test do
    system "#{bin}/lintnet --version"
  end
end
